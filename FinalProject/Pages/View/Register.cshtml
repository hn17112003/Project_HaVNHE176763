@page
@model FinalProject.Pages.View.RegisterModel
@{
}
<section class="blog-banner-area" id="category">
	<div class="container h-100">
		<div class="blog-banner">
			<div class="text-center">
				<h1>Register</h1>
			</div>
		</div>
	</div>
</section>
<!-- ================ end banner area ================= -->
<!--================Login Box Area =================-->
<section class="login_box_area section-margin">
	<div class="container">
		<div class="row">
			<div class="col-lg-6">
				<div class="login_box_img">
					<div class="hover">
						<h4>Already have an account?</h4>
						<p>There are advances being made in science and technology everyday, and a good example of this is the</p>
						<a class="button button-account" href="~/View/Login">Login Now</a>
					</div>
				</div>
			</div>
			<div class="col-lg-6">
				<div class="login_form_inner register_form_inner">
					<h3>Create an account</h3>
					<form class="row login_form" method="post" id="register_form">
						<div class="col-md-12 form-group">
							<input type="text" class="form-control" id="name" name="name" placeholder="Name" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Name'" value="@Model.Name">
						</div>
						<div class="col-md-12 form-group">
							<input type="text" class="form-control" id="username" name="username" placeholder="Username">
							<small id="usernameError" style="color: red; display: none;">Username is required.</small>
						</div>
						<div class="col-md-12 form-group">
							<input type="email" class="form-control" id="email" name="email" placeholder="Email" value="@Model.Email"
							@(string.IsNullOrEmpty(Model.Email) ? "" : "readonly")>
							<small id="emailError" style="color: red; display: none;">Email is required.</small>
						</div>
						<div class="col-md-12 form-group">
							<input type="text" class="form-control" id="address" name="address" placeholder="Address" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Address'">
						</div>
						<div class="col-md-12 form-group">
							<input type="password" class="form-control" id="password" name="password" placeholder="Password">
							<small id="passwordError" style="color: red; display: none;">Password is required.</small>
						</div>
						<div class="col-md-12 form-group">
							<input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm Password" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Confirm Password'">
							<small id="passwordMismatch" style="color: red; display: none;">Passwords do not match!</small>
							<small id="confirmPasswordError" style="color: red; display: none;">Confirm Password is required.</small>
						</div>
						<div class="col-md-12 form-group">
							<div class="creat_account">
								<input type="checkbox" id="f-option2" name="selector">
								<label for="f-option2">Keep me logged in</label>
							</div>
						</div>
						@if (!string.IsNullOrEmpty(Model.Message))
						{
							<div class="alert alert-danger">@Model.Message</div>
						}
						<div class="col-md-12 form-group">
							<button type="submit" value="submit" class="button button-register w-100" id="registerBtn">Register</button>
						</div>
					</form>
				</div>
			</div>
		</div>
	</div>
</section>